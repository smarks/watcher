name: Coverage Guard

on:
  pull_request:
    branches: [ main ]

jobs:
  coverage-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history to compare with main branch

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up baseline from main branch
      run: |
        set -e
        git checkout main
        python coverage_tracker.py --reset-baseline
        git checkout ${{ github.head_ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run tests and check coverage regression
      run: |
        set -e
        python -m pytest --cov=. --cov-report=xml --cov-report=term-missing -v
        python coverage_tracker.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract coverage data for PR comment
      id: coverage
      if: github.event_name == 'pull_request'
      run: |
        # Read baseline data
        if [ -f .coverage_baseline.json ]; then
          MAIN_COVERAGE=$(python -c "import json; data=json.load(open('.coverage_baseline.json')); print(f\"{data['total_coverage']:.1f}\")")
        else
          MAIN_COVERAGE="unknown"
        fi
        
        # Get current coverage from pytest output
        CURRENT_COVERAGE=$(python -c "
        import subprocess
        result = subprocess.run(['python', '-m', 'pytest', '--cov=.', '--cov-report=term-missing', '--quiet'], capture_output=True, text=True)
        import re
        match = re.search(r'TOTAL.*?(\d+)%', result.stdout)
        print(match.group(1) if match else '0')
        ")
        
        echo "MAIN_COVERAGE=$MAIN_COVERAGE" >> $GITHUB_OUTPUT
        echo "CURRENT_COVERAGE=$CURRENT_COVERAGE" >> $GITHUB_OUTPUT

    - name: Comment PR with coverage results
      if: github.event_name == 'pull_request' && steps.coverage.outputs.MAIN_COVERAGE != 'unknown'
      uses: actions/github-script@v6
      with:
        script: |
          const mainCoverage = '${{ steps.coverage.outputs.MAIN_COVERAGE }}';
          const currentCoverage = '${{ steps.coverage.outputs.CURRENT_COVERAGE }}';
          const diff = parseFloat(currentCoverage) - parseFloat(mainCoverage);
          
          let emoji, status, message;
          if (diff > 2) {
            emoji = "✅";
            status = "improved significantly";
            message = `Coverage ${status} by ${diff.toFixed(1)}%`;
          } else if (diff > 0) {
            emoji = "✅";
            status = "improved";
            message = `Coverage ${status} by ${diff.toFixed(1)}%`;
          } else if (diff >= -2) {
            emoji = "📊";
            status = "maintained";
            message = `Coverage ${status} (${diff.toFixed(1)}% change, within tolerance)`;
          } else {
            emoji = "⚠️";
            status = "declined significantly";
            message = `Coverage ${status} by ${Math.abs(diff).toFixed(1)}%`;
          }
          
          const body = `## ${emoji} Coverage Report
          
          | Branch | Coverage |
          |--------|----------|
          | main | ${mainCoverage}% |
          | ${context.payload.pull_request.head.ref} | ${currentCoverage}% |
          
          **${message}** (${mainCoverage}% → ${currentCoverage}%)
          
          ${diff < -2 ? '❌ **Significant regression detected!** This exceeds the 2% tolerance.' : ''}
          ${diff >= -2 && diff < 0 ? '✅ **Within tolerance** - small coverage changes are acceptable.' : ''}`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: pr-coverage
        fail_ci_if_error: false
      continue-on-error: true